<?php

/**
 * @file
 * Module file illustrating API-based node access.
 */


/**
 * Implements hook_permission().
 */
function image_hider_permission() {
  return array(
    'view hidden images' => array(
      'title' => t('View Image Nodes'), 
      'description' => t('Ability to view otherwise-hidden Images.'),
    ),
  );
} 
 
 

/**
 * Implements hook_node_grants().
 */
function image_hider_node_grants($account, $op) {
  $grants = array();
  
  if (($op == 'view' || $op == 'update' || $op = 'delete') && user_access('view hidden images', $account)) {
    $grants['image_hider_paid'] = array(42);
  }

  return $grants;
}

  
  
/**
 * Implements hook_node_access_records().
 */

  function image_hider_node_access_records($node) {
    $grants = array();
    if ($node->type == 'image') {
      $grants[] = array(
        'realm' => 'image_hider_paid',
        'gid' => 42,
        'grant_view' => 1,
        'grant_update' => 1,
        'grant_delete' => 0,
        'priority' => 0,
      );

      return $grants;
    }
  }


/**
 * Implements hook_node_access();

function image_hider_node_access($node, $op, $account) {
  $type = is_string($node) ? $node : $node->type;
  
  if ($type == 'image' && $op == 'view' && date('w', REQUEST_TIME) == 5) {
    return NODE_ACCESS_ALLOW;
  }
  
  return NODE_ACCESS_IGNORE;
}
 
 */
